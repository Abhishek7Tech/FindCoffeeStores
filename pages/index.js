import Head from "next/head";
import Banner from "../components/banner";
import styles from "../styles/Home.module.css";
import Image from "next/image";
import Card from "../components/card";
import coffeeStore from "../data/coffee-stores.json";
import { fetchCoffeeStores } from "../lib/coffee-stores";
import useTrackLocation from "../hooks/use-track-location";
import { useContext, useEffect, useState } from "react";
import {ACTION_TYPES, StoreContext} from "../store/store-context";

// getStaticProps function to fetch data from API passed to Home//

export async function getStaticProps(context) {
  // const options = {method: 'GET' , headers: {Accept: 'application/json' , Authorization:'fsq30NzaX8SFuEo4u7nzLwpZjVGvijoW1xGlmesgvoHWrSU='}};
  // Don't use API function on server Side to fetch//
  const transformedData = await fetchCoffeeStores();
  return {
    props: {
      coffeeStore: transformedData,
      // coffeeStore,
    },
  };
}

export default function Home(props) {
  const {locationErrorMessage, handleTrackLocation, isLoading } =
  useTrackLocation();
  
  // const [coffeeStores, setCoffeeStores] = useState("");
  const [coffeeStoresError, setcoffeeStoresError] = useState(null);
  const {dispatch, state} = useContext(StoreContext);
  const {coffeeStores, latLong} = state;
  // Fetch Coffee Store Based on User Location
  useEffect(() => {
    if (latLong) {
      (async () => {
        try {
          const fetchedCoffeeStores = await fetch(`../api/getCoffeeStoresByLocation?latLong=${latLong}&limit=9`);
          const coffeeStores = await fetchedCoffeeStores.json();
          // setCoffeeStores(fetchedCoffeeStores);
          dispatch({
            type: ACTION_TYPES.SET_COFFEE_STORES,
            payload: {
              coffeeStores            } 
          });

        } catch (error) {
          setcoffeeStoresError(error.message);
        }
      })();
    }
  }, [latLong,dispatch]);
  const handleOnBannerBtnClick = () => {
    handleTrackLocation();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Banner
          buttonText={isLoading ? "Loading..." : "View stores nearby"}
          handleOnClick={handleOnBannerBtnClick}
        ></Banner>
        {locationErrorMessage && (
          <p>Something went Wrong! {locationErrorMessage}</p>
        )}
        
        {coffeeStoresError && (
          <p> Something went Wrong! {coffeeStoresError} </p>
        )}
        
        <div className={styles.heroImage}>
          <Image
            src="/static/hero-img.png"
            width={400}
            height={400}
            alt="Hero image Women drinking coffee"
          ></Image>
        </div>
        
  {coffeeStores.length > 0 && (
      <div>
        <div>
          <h2 className={styles.heading2}> Stores NearBy Me </h2>
        </div>
        <div className={styles.cardLayout}>
          {coffeeStores.map((coffeeStore) => {
            return (
              <Card
                className={styles.card}
                key={coffeeStore.id}
                name={coffeeStore.name}
                imgURL={
                  coffeeStore.imgUrl ||
                  "https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
                }
                href={`/coffee-store/${coffeeStore.id}`}
              ></Card>
            );
          })}
        </div>
      </div>
    )}

        {props.coffeeStore.length > 0 && (
          <div>
            <div>
              <h2 className={styles.heading2}> Toronto Stores </h2>
            </div>
            <div className={styles.cardLayout}>
              {props.coffeeStore.map((coffeeStore) => {
                return (
                  <Card
                    className={styles.card}
                    key={coffeeStore.id}
                    name={coffeeStore.name}
                    imgURL={
                      coffeeStore.imgUrl ||
                      "https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
                    }
                    href={`/coffee-store/${coffeeStore.id}`}
                  ></Card>
                );
              })}
            </div>
          </div>
        )}
      </main>
    </div>
  );
}
